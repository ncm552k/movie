{"version":3,"file":"static/js/305.bc9a2d91.chunk.js","mappings":"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","sources":["components/loading/LoadingSkeleton.js","components/movie/MovieCard.js","pages/MovieDetailsPage.js","../node_modules/react-error-boundary/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/react-error-boundary/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/react-error-boundary/src/index.tsx"],"sourcesContent":["import React from \"react\";\n\nconst LoadingSkeleton = (props) => {\n  return (\n    <div\n      className={`skeleton ${props.className}`}\n      style={{\n        height: props.height,\n        width: props.width || \"100%\",\n        borderRadius: props.radius,\n      }}\n    ></div>\n  );\n};\n\nexport default LoadingSkeleton;\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { tmdbAPI } from \"apiConfig/config\";\nimport Button from \"components/button/Button\";\nimport PropTypes from \"prop-types\";\nimport { withErrorBoundary } from \"react-error-boundary\";\nimport LoadingSkeleton from \"components/loading/LoadingSkeleton\";\n\nconst MovieCard = ({ item }) => {\n  const { title, vote_average, release_date, poster_path, id } = item;\n  const navigate = useNavigate();\n  return (\n    <div className=\"movie-card flex flex-col rounded-lg p-3 bg-slate-800 text-white h-full select-none\">\n      <img\n        src={tmdbAPI.image500(poster_path)}\n        alt=\"\"\n        className=\"w-full h-[250px] object-cover rounded-lg mb-5\"\n      />\n      <div className=\"flex flex-col flex-1\">\n        <h3 className=\"text-xl font-bold mb-3\">{title}</h3>\n        <div className=\"flex items-center justify-between text-sm opacity-50 mb-10\">\n          <span>{new Date(release_date).getFullYear()}</span>\n          <span>{vote_average}</span>\n        </div>\n        <Button bgColor=\"secondary\" onClick={() => navigate(`/movie/${id}`)}>\n          Watch now\n        </Button>\n      </div>\n    </div>\n  );\n};\nMovieCard.propTypes = {\n  item: PropTypes.shape({\n    title: PropTypes.string,\n    vote_average: PropTypes.number,\n    release_date: PropTypes.string,\n    poster_path: PropTypes.string,\n    id: PropTypes.number,\n  }),\n};\n\nfunction FallbackComponent() {\n  return (\n    <p className=\"bg-red-50 text-red-400\">\n      Something went wrong with this component\n    </p>\n  );\n}\n\nexport default withErrorBoundary(MovieCard, {\n  FallbackComponent,\n});\n\nexport const MovieCardSkeleton = () => {\n  return (\n    <div className=\"movie-card flex flex-col rounded-lg p-3 bg-slate-800 text-white h-full select-none\">\n      <LoadingSkeleton\n        width=\"100%\"\n        height=\"250px\"\n        radius=\"8px\"\n        className=\"mb-5\"\n      ></LoadingSkeleton>\n      <div className=\"flex flex-col flex-1\">\n        <h3 className=\"text-xl font-bold mb-3\">\n          <LoadingSkeleton width=\"100%\" height=\"20px\"></LoadingSkeleton>\n        </h3>\n        <div className=\"flex items-center justify-between text-sm opacity-50 mb-10\">\n          <span>\n            <LoadingSkeleton width=\"50px\" height=\"10px\"></LoadingSkeleton>\n          </span>\n          <span>\n            <LoadingSkeleton width=\"30px\" height=\"10px\"></LoadingSkeleton>\n          </span>\n        </div>\n        <LoadingSkeleton\n          width=\"100%\"\n          height=\"45px\"\n          radius=\"6px\"\n        ></LoadingSkeleton>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { SwiperSlide, Swiper } from \"swiper/react\";\nimport useSWR from \"swr\";\nimport MovieCard from \"components/movie/MovieCard\";\nimport { fetcher, tmdbAPI } from \"apiConfig/config\";\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const { data } = useSWR(tmdbAPI.getMovieDetails(movieId), fetcher);\n  if (!data) return null;\n  const { backdrop_path, poster_path, title, genres, overview } = data;\n\n  return (\n    <div className=\"py-10\">\n      <div className=\"w-full h-[600px] relative\">\n        <div className=\"absolute inset-0 bg-black bg-opacity-70\"></div>\n        <div\n          className=\"w-full h-full bg-cover bg-no-repeat\"\n          style={{\n            backgroundImage: `url(${tmdbAPI.imageOriginal(backdrop_path)})`,\n          }}\n        ></div>\n      </div>\n      <div className=\"w-full h-[400px] max-w-[800px] mx-auto -mt-[200px] relative z-10 pb-10\">\n        <img\n          src={tmdbAPI.imageOriginal(poster_path)}\n          className=\"w-full h-full object-cover rounded-xl\"\n          alt=\"\"\n        />\n      </div>\n      <h1 className=\"text-center text-4xl font-bold text-white mb-10\">\n        {title}\n      </h1>\n      {genres.length > 0 && (\n        <div className=\"flex items-center justify-center gap-x-5 mb-10\">\n          {genres.map((item) => (\n            <span\n              className=\"py-2 px-4 border-primary text-primary border rounded\"\n              key={item.id}\n            >\n              {item.name}\n            </span>\n          ))}\n        </div>\n      )}\n      <p className=\"text-center leading-relaxed max-w-[600px] mx-auto mb-10\">\n        {overview}\n      </p>\n      <MovieMeta type=\"credits\"></MovieMeta>\n      <MovieMeta type=\"videos\"></MovieMeta>\n      <MovieMeta type=\"similar\"></MovieMeta>\n    </div>\n  );\n};\n\nfunction MovieMeta({ type = \"videos\" }) {\n  const { movieId } = useParams();\n  const { data } = useSWR(tmdbAPI.getMovieMeta(movieId, type), fetcher);\n  if (!data) return null;\n  if (type === \"credits\") {\n    const { cast } = data;\n    if (!cast || cast.length <= 0) return null;\n\n    return (\n      <div className=\"py-10\">\n        <h2 className=\"text-center text-3xl mb-10\">Casts</h2>\n        <div className=\"grid grid-cols-4 gap-5\">\n          {cast.slice(0, 4).map((item) => (\n            <div className=\"cast-item\" key={item.id}>\n              <img\n                src={tmdbAPI.imageOriginal(item.profile_path)}\n                className=\"w-full h-[350px] object-cover rounded-lg mb-3\"\n                alt=\"\"\n              />\n              <h3 className=\"text-xl font-medium\">{item.name}</h3>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  } else {\n    const { results } = data;\n    if (!results || results.length <= 0) return null;\n    if (type === \"videos\")\n      return (\n        <div className=\"py-10\">\n          <div className=\"flex flex-col gap-10\">\n            {results.slice(0, 2).map((item) => (\n              <div className=\"\" key={item.id}>\n                <h3 className=\"mb-5 text-xl font-medium p-3 bg-secondary inline-block\">\n                  {item.name}\n                </h3>\n                <div key={item.id} className=\"w-full aspect-video\">\n                  <iframe\n                    width=\"864\"\n                    height=\"486\"\n                    src={`https://www.youtube.com/embed/${item.key}`}\n                    title=\"YouTube video player\"\n                    frameBorder=\"0\"\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                    allowFullScreen\n                    className=\"w-full h-full object-fill\"\n                  ></iframe>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      );\n    if (type === \"similar\")\n      return (\n        <div className=\"py-10\">\n          <h2 className=\"text-3xl font-medium mb-10\">Similar movies</h2>\n          <div className=\"movie-list\">\n            <Swiper\n              grabCursor={\"true\"}\n              spaceBetween={40}\n              slidesPerView={\"auto\"}\n            >\n              {results.length > 0 &&\n                results.map((item) => (\n                  <SwiperSlide key={item.id}>\n                    <MovieCard item={item}></MovieCard>\n                  </SwiperSlide>\n                ))}\n            </Swiper>\n          </div>\n        </div>\n      );\n  }\n  return null;\n}\n\nfunction MovieCredits() {\n  const { movieId } = useParams();\n  const { data } = useSWR(tmdbAPI.getMovieMeta(movieId, \"credits\"), fetcher);\n  if (!data) return null;\n  const { cast } = data;\n  if (!cast || cast.length <= 0) return null;\n  return (\n    <div className=\"py-10\">\n      <h2 className=\"text-center text-3xl mb-10\">Casts</h2>\n      <div className=\"grid grid-cols-4 gap-5\">\n        {cast.slice(0, 4).map((item) => (\n          <div className=\"cast-item\" key={item.id}>\n            <img\n              src={tmdbAPI.imageOriginal(item.profile_path)}\n              className=\"w-full h-[350px] object-cover rounded-lg mb-3\"\n              alt=\"\"\n            />\n            <h3 className=\"text-xl font-medium\">{item.name}</h3>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction MovieVideos() {\n  const { movieId } = useParams();\n  const { data } = useSWR(tmdbAPI.getMovieMeta(movieId, \"videos\"), fetcher);\n  if (!data) return null;\n  const { results } = data;\n  if (!results || results.length <= 0) return null;\n  return (\n    <div className=\"py-10\">\n      <div className=\"flex flex-col gap-10\">\n        {results.slice(0, 2).map((item) => (\n          <div className=\"\" key={item.id}>\n            <h3 className=\"mb-5 text-xl font-medium p-3 bg-secondary inline-block\">\n              {item.name}\n            </h3>\n            <div key={item.id} className=\"w-full aspect-video\">\n              <iframe\n                width=\"864\"\n                height=\"486\"\n                src={`https://www.youtube.com/embed/${item.key}`}\n                title=\"YouTube video player\"\n                frameBorder=\"0\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen\n                className=\"w-full h-full object-fill\"\n              ></iframe>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction MovieSimilar() {\n  const { movieId } = useParams();\n  const { data } = useSWR(tmdbAPI.getMovieMeta(movieId, \"similar\"), fetcher);\n  if (!data) return null;\n  const { results } = data;\n  if (!results || results.length <= 0) return null;\n  return (\n    <div className=\"py-10\">\n      <h2 className=\"text-3xl font-medium mb-10\">Similar movies</h2>\n      <div className=\"movie-list\">\n        <Swiper grabCursor={\"true\"} spaceBetween={40} slidesPerView={\"auto\"}>\n          {results.length > 0 &&\n            results.map((item) => (\n              <SwiperSlide key={item.id}>\n                <MovieCard item={item}></MovieCard>\n              </SwiperSlide>\n            ))}\n        </Swiper>\n      </div>\n    </div>\n  );\n}\n\nexport default MovieDetailsPage;\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import * as React from 'react'\n\nconst changedArray = (a: Array<unknown> = [], b: Array<unknown> = []) =>\n  a.length !== b.length || a.some((item, index) => !Object.is(item, b[index]))\n\ninterface FallbackProps {\n  error: Error\n  resetErrorBoundary: (...args: Array<unknown>) => void\n}\n\ninterface ErrorBoundaryPropsWithComponent {\n  onResetKeysChange?: (\n    prevResetKeys: Array<unknown> | undefined,\n    resetKeys: Array<unknown> | undefined,\n  ) => void\n  onReset?: (...args: Array<unknown>) => void\n  onError?: (error: Error, info: {componentStack: string}) => void\n  resetKeys?: Array<unknown>\n  fallback?: never\n  FallbackComponent: React.ComponentType<FallbackProps>\n  fallbackRender?: never\n}\n\ndeclare function FallbackRender(\n  props: FallbackProps,\n): React.ReactElement<\n  unknown,\n  string | React.FunctionComponent | typeof React.Component\n> | null\n\ninterface ErrorBoundaryPropsWithRender {\n  onResetKeysChange?: (\n    prevResetKeys: Array<unknown> | undefined,\n    resetKeys: Array<unknown> | undefined,\n  ) => void\n  onReset?: (...args: Array<unknown>) => void\n  onError?: (error: Error, info: {componentStack: string}) => void\n  resetKeys?: Array<unknown>\n  fallback?: never\n  FallbackComponent?: never\n  fallbackRender: typeof FallbackRender\n}\n\ninterface ErrorBoundaryPropsWithFallback {\n  onResetKeysChange?: (\n    prevResetKeys: Array<unknown> | undefined,\n    resetKeys: Array<unknown> | undefined,\n  ) => void\n  onReset?: (...args: Array<unknown>) => void\n  onError?: (error: Error, info: {componentStack: string}) => void\n  resetKeys?: Array<unknown>\n  fallback: React.ReactElement<\n    unknown,\n    string | React.FunctionComponent | typeof React.Component\n  > | null\n  FallbackComponent?: never\n  fallbackRender?: never\n}\n\ntype ErrorBoundaryProps =\n  | ErrorBoundaryPropsWithFallback\n  | ErrorBoundaryPropsWithComponent\n  | ErrorBoundaryPropsWithRender\n\ntype ErrorBoundaryState = {error: Error | null}\n\nconst initialState: ErrorBoundaryState = {error: null}\n\nclass ErrorBoundary extends React.Component<\n  React.PropsWithRef<React.PropsWithChildren<ErrorBoundaryProps>>,\n  ErrorBoundaryState\n> {\n  static getDerivedStateFromError(error: Error) {\n    return {error}\n  }\n\n  state = initialState\n  resetErrorBoundary = (...args: Array<unknown>) => {\n    this.props.onReset?.(...args)\n    this.reset()\n  }\n\n  reset() {\n    this.setState(initialState)\n  }\n\n  componentDidCatch(error: Error, info: React.ErrorInfo) {\n    this.props.onError?.(error, info)\n  }\n\n  componentDidUpdate(\n    prevProps: ErrorBoundaryProps,\n    prevState: ErrorBoundaryState,\n  ) {\n    const {error} = this.state\n    const {resetKeys} = this.props\n\n    // There's an edge case where if the thing that triggered the error\n    // happens to *also* be in the resetKeys array, we'd end up resetting\n    // the error boundary immediately. This would likely trigger a second\n    // error to be thrown.\n    // So we make sure that we don't check the resetKeys on the first call\n    // of cDU after the error is set\n\n    if (\n      error !== null &&\n      prevState.error !== null &&\n      changedArray(prevProps.resetKeys, resetKeys)\n    ) {\n      this.props.onResetKeysChange?.(prevProps.resetKeys, resetKeys)\n      this.reset()\n    }\n  }\n\n  render() {\n    const {error} = this.state\n\n    const {fallbackRender, FallbackComponent, fallback} = this.props\n\n    if (error !== null) {\n      const props = {\n        error,\n        resetErrorBoundary: this.resetErrorBoundary,\n      }\n      if (React.isValidElement(fallback)) {\n        return fallback\n      } else if (typeof fallbackRender === 'function') {\n        return fallbackRender(props)\n      } else if (FallbackComponent) {\n        return <FallbackComponent {...props} />\n      } else {\n        throw new Error(\n          'react-error-boundary requires either a fallback, fallbackRender, or FallbackComponent prop',\n        )\n      }\n    }\n\n    return this.props.children\n  }\n}\n\nfunction withErrorBoundary<P>(\n  Component: React.ComponentType<P>,\n  errorBoundaryProps: ErrorBoundaryProps,\n): React.ComponentType<P> {\n  const Wrapped: React.ComponentType<P> = props => {\n    return (\n      <ErrorBoundary {...errorBoundaryProps}>\n        <Component {...props} />\n      </ErrorBoundary>\n    )\n  }\n\n  // Format for display in DevTools\n  const name = Component.displayName || Component.name || 'Unknown'\n  Wrapped.displayName = `withErrorBoundary(${name})`\n\n  return Wrapped\n}\n\nfunction useErrorHandler(givenError?: unknown): (error: unknown) => void {\n  const [error, setError] = React.useState<unknown>(null)\n  if (givenError != null) throw givenError\n  if (error != null) throw error\n  return setError\n}\n\nexport {ErrorBoundary, withErrorBoundary, useErrorHandler}\nexport type {\n  FallbackProps,\n  ErrorBoundaryPropsWithComponent,\n  ErrorBoundaryPropsWithRender,\n  ErrorBoundaryPropsWithFallback,\n  ErrorBoundaryProps,\n}\n\n/*\neslint\n  @typescript-eslint/sort-type-union-intersection-members: \"off\",\n  @typescript-eslint/no-throw-literal: \"off\",\n  @typescript-eslint/prefer-nullish-coalescing: \"off\"\n*/\n"],"names":["props","className","style","height","width","borderRadius","radius","withErrorBoundary","item","title","vote_average","release_date","poster_path","id","navigate","useNavigate","src","tmdbAPI","alt","Date","getFullYear","Button","bgColor","onClick","FallbackComponent","MovieCardSkeleton","MovieMeta","type","movieId","useParams","data","useSWR","fetcher","cast","length","slice","map","profile_path","name","results","key","frameBorder","allow","allowFullScreen","grabCursor","spaceBetween","slidesPerView","backdrop_path","genres","overview","backgroundImage","_setPrototypeOf","o","p","Object","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","prototype","create","constructor","changedArray","a","b","some","index","is","initialState","error","ErrorBoundary","state","resetErrorBoundary","args","arguments","_this","onReset","reset","getDerivedStateFromError","this","setState","componentDidCatch","info","onError","componentDidUpdate","prevProps","prevState","resetKeys","onResetKeysChange","render","fallbackRender","fallback","React","isValidElement","Error","children","Component","errorBoundaryProps","Wrapped","displayName","useErrorHandler","givenError","useState","setError"],"sourceRoot":""}